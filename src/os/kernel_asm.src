;
; @file kernel RX用ディスパッチ用アセンブラコード
; @author
;
; アキュームレータは保存していない。DSPを使用する場合、
; アキュームレータの保存処理を実装する必要がある。
;
    .GLB _CurrentTcb ; カレントTCB
    .GLB _kernel_update_scheduler ;

    .SECTION P,CODE ; コードセクションに配置
;-------------------------------------------------------------------------------
; Excep_ICU_SWINT
;   ソフトウェア割り込みハンドラ。
;   CPUを変更する場合にはベクタ番号を変更する事。
;
; Note: エントリポイントをアセンブラで実装する理由
;   CC for RXを使用すると、割り込みハンドラ突入時に所定のレジスタを自動的に退避/復元するコードが
;   挿入される。
;   スタックへの退避順序は CC for RX のバージョンに依って順番が変わってしまい、
;   ソフトウェアでコントロールすることができない。
;   そのためエントリポイントをアセンブラで記述し、必要なレジスタの退避を確実に行う。
;-------------------------------------------------------------------------------
    .RVECTOR  27, _Excep_ICU_SWINT ; _Excep_ICU_SWINTをベクタテーブル#27に配置
_Excep_ICU_SWINT:
    ;---------------------------------------------------------------------------
    ; コンテキストスイッチのため、
    ; タスクコンテキストブロックを現在のユーザースタックに退避させる
    ; 割り込みが発生するとハードウェアにより、、PSW と PCが割り込みスタックに退避される。
    ; これは取り出してユーザースタックに積んでおく
    ;---------------------------------------------------------------------------
    ; まず、最小限のレジスタ(R15, PC, PSW)を退避させる。
    ; R15退避
    PUSH.L R15
    ; ユーザースタックにR15, PC, PSW をコピーする
    MVFC   USP, R15  ;
    SUB    #12, R15  ; R15, PC, PSWの分スタックポインタを進める
    MVTC   R15, USP  ;

    MOV.L  0[ R0 ], 0[ R15 ]  ; R15コピー
    MOV.L  4[ R0 ], 4[ R15 ]  ; PCコピー
    MOV.L  8[ R0 ], 8[ R15 ]  ; PSWコピー

    ADD    #12, R0; ; 割り込みスタックからR15, PC, PSWを取り除いたので、
                    ; 12バイト分スタックポインタを戻す。

    ; ユーザースタックに切り替えて、
    ; 残りのレジスタを退避させる。
    SETPSW U        ; ユーザースタックに切り替え

    PUSHM  R1-R14   ; R1-R14退避。
                    ; RXファミリ ソフトウェアマニュアルにあるとおり、R14, ...,R1の順に退避される。

    MVFC PSW, R15   ;
    PUSH.L R15      ; FPSW退避

    ; Note: アキュームレータをスタックに退避させる場合にはここに実装する。

    ;---------------------------------------------------------------------------
    ; 現在のユーザースタックポインタをCurrentTCBに保存
    ;---------------------------------------------------------------------------
    MOV.L  #_CurrentTcb, R15 ;
    MOV.L  [ R15 ], R15      ;
    MOV.L  R0, [ R15 ]       ;

    ;---------------------------------------------------------------------------
    ; スケジューラの更新呼び出し
    ;---------------------------------------------------------------------------
    BSR.A  _kernel_update_scheduler;

    ;---------------------------------------------------------------------------
    ; ユーザースタックポインタをCurrentTCBから復元
    ;---------------------------------------------------------------------------
    MOV.L  #_CurrentTcb, R15
    MOV.L  [ R15 ], R15
    MOV.L  [ R15 ], R0
    ;---------------------------------------------------------------------------
    ; 現在のコンテキストブロックからレジスタを復元
    ;---------------------------------------------------------------------------

    ; Note: アキュームレータをスタックから復元させる場合にはここに実装する。

    POP    R15
    MVTC   R15, FPSW ; FPSW復元

    POPM   R1-R15 ; R1-R15復元

    ;---------------------------------------------------------------------------
    ; RTE命令を発行して復帰命令を出すと、
    ; 現在のスタック(ユーザースタック)からPC, PSWがロードされて復帰する。
    ;---------------------------------------------------------------------------
    RTE     ; 例外から復帰する。スタックに積まれた PC, PSW が復帰されて元に戻る。
    NOP
    NOP

    .END
